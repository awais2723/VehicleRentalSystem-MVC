@model IEnumerable<Tuple<string, string, decimal>> 
@{
    ViewBag.Title = "Financial Overview Report";
}

<div class="container my-5">
    <h2 class="mb-4 text-dark fw-bold">Financial Overview Report</h2>

    <div class="row g-4 mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm p-3 text-center border-start border-4 border-success h-100">
                <h5 class="text-muted">Total Revenue</h5>
                <p class="display-6 fw-bold text-success">@ViewBag.TotalRevenue.ToString("N")</p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm p-3 text-center border-start border-4 border-primary h-100">
                <h5 class="text-muted">Avg. Booking Amount</h5>
                <p class="display-6 fw-bold text-primary">@ViewBag.AverageBookingAmount.ToString("N")</p>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm p-3 text-center border-start border-4 border-info h-100">
                <h5 class="text-muted">Value of Active Bookings</h5>
                <p class="display-6 fw-bold text-info">@ViewBag.TotalActiveBookingsValue.ToString("N")</p>
            </div>
        </div>
    </div>

    <div class="card shadow-sm p-4 mb-4">
        <h4 class="mb-3 text-dark">Monthly Revenue Trend</h4>
        <canvas id="monthlyRevenueChart" style="max-height: 400px;"></canvas>
    </div>

    <div class="card shadow-sm p-4">
        <h4 class="mb-3 text-dark">Total Revenue Per Car</h4>
        @if (!Model.Any())
        {
            <div class="alert alert-info" role="alert">
                No car revenue data available for this report.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="bg-light">
                        <tr>
                            <th>Car ID</th>
                            <th>Car Name</th>
                            
                            <th>Total Revenue</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Item2</td>
                                <td>@item.Item1</td>

                                <td>@item.Item3.ToString("N")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Data for Monthly Revenue Chart
            var monthlyRevenueLabels = @Html.Raw(Json.Encode(ViewBag.MonthlyRevenueLabels));
            var monthlyRevenueData = @Html.Raw(Json.Encode(ViewBag.MonthlyRevenueData));

            var ctxMonthlyRevenue = document.getElementById('monthlyRevenueChart').getContext('2d');
            new Chart(ctxMonthlyRevenue, {
                type: 'line',
                data: {
                    labels: monthlyRevenueLabels,
                    datasets: [{
                        label: 'Total Revenue',
                        data: monthlyRevenueData,
                        borderColor: 'rgba(52, 152, 219, 1)',
                        backgroundColor: 'rgba(52, 152, 219, 0.2)', // Light fill below line
                        borderWidth: 2,
                        fill: true, // Fill area below the line
                        tension: 0.3 // Smooth curves
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Revenue'
                            },
                            ticks: {
                                callback: function(value, index, values) {
                                    return value.toLocaleString(); // Format as currency
                                }
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Month'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        title: {
                            display: false
                        }
                    }
                }
            });
        });
    </script>
}